map "http://worldhealthorganization.github.io/ddcc/StructureMap/ddcc-to-shc" = "DDCCtoSHC"

uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCDocument"  alias DDCCDocument as source
uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCPatient"  alias DDCCPatient as source
uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCComposition" alias DDCCComposition as source
uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCOrganization" alias DDCCOrganization as source
uses 'http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCCountryOfVaccination' alias DDCCCountryOfVaccination as source
uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCVaccineBrand" alias DDCCVaccineBrand as source
uses "http://worldhealthorganization.github.io/ddcc/StructureDefinition/DDCCImmunization" alias DDCCImmunization as source
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-vaccination-bundle-dm" alias SHCVaccinationBundleDM as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-vaccination-bundle-ad" alias SHCVaccinationBundleAD as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-patient-general-dm" alias patientDM as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-patient-general-ad" alias patientAD as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-patient-us-dm" alias patientUSDM as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-patient-us-ad" alias patientUSAD as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-vaccination-dm"  alias immunizationDM as target
uses "http://hl7.org/fhir/uv/shc-vaccination/StructureDefinition/shc-vaccination-ad" alias immunizationAD as target


group DDCCtoSHC (
    source ddcc : DDCCDocument,
    target shc : SHCVaccinationBundleDM
    ){

    ddcc.entry as entry then {
        entry.resource : Patient first as patient then {
            entry -> shc.entry as entrySHC then {
                entry.fullUrl -> entrySHC.fullUrl = "resource:0" "Full URL";
                patient -> entrySHC.resource = create('Patient') as patientSHC then DDCCPatienttoSHC(patient,patientSHC) "Patient resource";
            } "Patient entry";
        } "Is Patient entry";
    } "map patients";

    ddcc.entry as entry then {
        entry.resource : Immunization first as immunization then {
            entry -> shc.entry as entrySHC then {
                entry.fullUrl -> entrySHC.fullUrl = "resource:1" "Full URL";
                immunization -> entrySHC.resource = create('Immunization') as immunizationSHC then DDCCImmunizationtoSHC(immunization,immunizationSHC) "Immunization resource";
            } "Immunization entry";
        } "Is Immunization entry";
    } "map immunizations" ;
}


group DDCCPatienttoSHC(
    source patient: DDCCPatient,
    target patientSHC : patientDM
    ){
    patient.name only_one as name -> patientSHC.name = name then {
        name.given as givenname -> name.given = givenname "Given Name";
        name.family as familyname -> name.family = familyname "Family Name";
    } "Name";

    patient.birthDate as birthDate -> patientSHC.birthDate = birthDate "Birth Date"; 
    
}     

group DDCCImmunizationtoSHC(
      source immunization: DDCCImmunization,
      target immunizationSHC : immunizationDM
      ) {
    immunization.status as status -> immunizationSHC.status = status "Status";   
    immunization.patient as patient -> immunizationSHC.patient = create('Reference') as patientRef then {
        patient.reference -> patientRef.reference = "resource:0" "Patient Reference";
    };
    immunization.coding as coding -> immunizationSHC.coding as codingSHC then vaccineCode(immunization, immunizationSHC) "vaccineCode";
    immunization.occurrence as occurrenceDateTime -> immunizationSHC.occurrence = occurrenceDateTime "Occurrence DateTime";

    immunization.manfacturer as manfacturer -> immunizationSHC.manfacturer = manfacturer "Manufacturer";
    immunization.lotNumber as lotNumber -> immunizationSHC.lotNumber = lotNumber "Lot Number";
}

group vaccineCode(
      source immunization: DDCCImmunization,
      target immunizationSHC : immunizationDM
      ){
      immunization.coding as coding -> immunizationSHC.coding = coding "vaccineCode Coding"; 
}